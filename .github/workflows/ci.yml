name: Terminus CI/CD

on:
  push:
    branches: [main]
    # trigger on tags for versioned releases
    # tags: ['v*.*.*']
  pull_request:
    branches: [main]

permissions:
  contents: read

jobs:
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 📦 Install uv
        uses: astral-sh/setup-uv@v5

      - name: 🧠 Restore uv cache
        id: cache-uv
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: uv-${{ runner.os }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
          restore-keys: |
            uv-${{ runner.os }}-

      - name: 📦 Install dependencies (dev)
        run: uv sync --dev

      - name: ✨ Lint with Ruff
        run: |
          uv run ruff check src
          uv run ruff format --check src
    # No tests yet
    #   - name: ✅ Run tests
    #     run: uv run pytest tests/
    #     continue-on-error: true  # Make strict if critical

  build-and-push-docker:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: lint-and-test
    permissions:
      contents: read

    steps:
      - name: ⬇️ Checkout Code
        uses: actions/checkout@v4

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🏷️ Docker Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: your-dockerhub-username/terminus
          tags: |
            type=sha,format=short
            type=raw,value=latest

      - name: 🔑 Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🏗️ Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
